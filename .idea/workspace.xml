<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="50175f66-115b-4478-9421-f02f0a7d90ab" name="Changes" comment="FÃ¼ge JUnit-Test `ZFBindingTest` hinzu, um XML-Ausgabe zu erstellen und zu validieren&#10;&#10;- Erstelle Methode `createXml` zur Generierung und Validierung der XML-Ausgabe gegen ein XSD-Schema&#10;- Aktualisiere `NodeHelper`-Methoden, um `createAmountType` zu verwenden&#10;- Implementiere `ZFBindingTest`-Klasse mit Methoden zur Erstellung von Beispiel-Daten und XML-Struktur">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ponyproject" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ponyproject" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ponyproject" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="ponyproject" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="help" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2scKQhuqW4ykN5b27vPDHTD2VRK" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Gradle.Build ponyproject.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DateTimeFormatTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DateTimeFormatTest.formatDate.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.DateTimeFormatTest.formatDateTime.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.FacturXBindingTest.createFacturX.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.FacturXBindingTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ZFBindingTest.createFacturX.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ZFBindingTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ponyproject [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ponyproject [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ponyproject [dependencyInsight].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ponyproject [dependencyUpdates].executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DateTimeFormatTest.formatDateTime.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.3443396&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="de.il.torsten.pony" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.ZFBindingTest">
    <configuration name="ZFBindingTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":zfbinding:test" />
            <option value="--tests" />
            <option value="&quot;de.il.torsten.zf.binding.ZFBindingTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ZFBindingTest.createFacturX" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":zfbinding:test" />
            <option value="--tests" />
            <option value="&quot;de.il.torsten.zf.binding.ZFBindingTest.createFacturX&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ponyproject [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ponyproject [clean]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="clean" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ponyproject [dependencyUpdates]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="dependencyUpdates" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.ZFBindingTest" />
        <item itemvalue="Gradle.ZFBindingTest.createFacturX" />
        <item itemvalue="Gradle.ponyproject [dependencyUpdates]" />
        <item itemvalue="Gradle.ponyproject [build]" />
        <item itemvalue="Gradle.ponyproject [clean]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="50175f66-115b-4478-9421-f02f0a7d90ab" name="Changes" comment="" />
      <created>1738749408337</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1738749408337</updated>
    </task>
    <task id="LOCAL-00001" summary="Aktualisiere ZFBindingTest zur Validierung der XML-Ausgabe gegen XSD-Schema&#10;&#10;- Ersetze `NodeHelper.getAmountType` durch `NodeHelper.createAmountType`&#10;- FÃ¼ge XSD-Schema-Validierung in der `createXml`-Methode hinzu&#10;- Implementiere Validierungs-Event-Handler zur Ausgabe von Validierungsfehlern&#10;- Speichere die XML-Ausgabe in `/tmp/factur-x.xml`">
      <option name="closed" value="true" />
      <created>1739719300374</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1739719300375</updated>
    </task>
    <task id="LOCAL-00002" summary="FÃ¼ge JUnit-Test `ZFBindingTest` hinzu, um XML-Ausgabe zu erstellen und zu validieren&#10;&#10;- Erstelle Methode `createXml` zur Generierung und Validierung der XML-Ausgabe gegen ein XSD-Schema&#10;- Aktualisiere `NodeHelper`-Methoden, um `createAmountType` zu verwenden&#10;- Implementiere `ZFBindingTest`-Klasse mit Methoden zur Erstellung von Beispiel-Daten und XML-Struktur">
      <option name="closed" value="true" />
      <created>1739720167809</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1739720167809</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Aktualisiere ZFBindingTest zur Validierung der XML-Ausgabe gegen XSD-Schema&#10;&#10;- Ersetze `NodeHelper.getAmountType` durch `NodeHelper.createAmountType`&#10;- FÃ¼ge XSD-Schema-Validierung in der `createXml`-Methode hinzu&#10;- Implementiere Validierungs-Event-Handler zur Ausgabe von Validierungsfehlern&#10;- Speichere die XML-Ausgabe in `/tmp/factur-x.xml`" />
    <MESSAGE value="FÃ¼ge JUnit-Test `ZFBindingTest` hinzu, um XML-Ausgabe zu erstellen und zu validieren&#10;&#10;- Erstelle Methode `createXml` zur Generierung und Validierung der XML-Ausgabe gegen ein XSD-Schema&#10;- Aktualisiere `NodeHelper`-Methoden, um `createAmountType` zu verwenden&#10;- Implementiere `ZFBindingTest`-Klasse mit Methoden zur Erstellung von Beispiel-Daten und XML-Struktur" />
    <option name="LAST_COMMIT_MESSAGE" value="FÃ¼ge JUnit-Test `ZFBindingTest` hinzu, um XML-Ausgabe zu erstellen und zu validieren&#10;&#10;- Erstelle Methode `createXml` zur Generierung und Validierung der XML-Ausgabe gegen ein XSD-Schema&#10;- Aktualisiere `NodeHelper`-Methoden, um `createAmountType` zu verwenden&#10;- Implementiere `ZFBindingTest`-Klasse mit Methoden zur Erstellung von Beispiel-Daten und XML-Struktur" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/zfbinding/src/test/java/de/il/torsten/zf/binding/DateTimeFormatTest.java</url>
          <line>18</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>